@page "/medicalrecords/edit/{Id:int}"
@using HealthApp.Data.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Edit Medical Record</h3>

@if (record == null || patients == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="@record" OnValidSubmit="HandleUpdate">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label>Patient:</label>
            <select @bind="record.PatientId" class="form-control">
                <option value="0">Select Patient</option>
                @foreach (var p in patients)
                {
                    <option value="@p.Id">@p.FullName</option>
                }
            </select>
        </div>

        <div class="mb-3">
            <label>Diagnosis:</label>
            <InputText class="form-control" @bind-Value="record.Diagnosis" />
        </div>

        <div class="mb-3">
            <label>Treatment:</label>
            <InputText class="form-control" @bind-Value="record.Treatment" />
        </div>

        <div class="mb-3">
            <label>Date:</label>
            <InputDate class="form-control" @bind-Value="record.RecordDate" />
        </div>

        <button type="submit" class="btn btn-primary">Save Changes</button>
    </EditForm>
}

@code {
    public MedicalRecord record { get; set; } = new MedicalRecord();
    public List<Patient> patients { get; set; } = new List<Patient>();

    [Parameter] public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        record = await Http.GetFromJsonAsync<MedicalRecord>($"api/medicalrecords/{Id}") ?? new MedicalRecord();
        patients = await Http.GetFromJsonAsync<List<Patient>>("api/patients") ?? new List<Patient>();
    }

    public async Task HandleUpdate()
    {
        if (record.PatientId == 0) return;

        await Http.PutAsJsonAsync($"api/medicalrecords/{Id}", record);
        Navigation.NavigateTo("/medicalrecords");
    }
}
