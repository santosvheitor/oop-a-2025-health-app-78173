@page "/doctors"
@using System.Net.Http.Json
@using HealthApp.Blazor.Models
@using Microsoft.AspNetCore.Authorization
@inject HttpClient Http
@inject NavigationManager NavManager
@attribute [Authorize]
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider

@inherits ComponentBase

<h3 class="text-2xl font-semibold mb-4">Doctors</h3>

@if (isLoading)
{
    <p>Loading doctors...</p>
}
else if (isAdmin)
{
    <AdminDoctorsView Doctors="Doctors" OnAdd="AddDoctor" OnDelete="DeleteDoctor" />
}
else if (isDoctor)
{
    <DoctorProfileView Doctor="CurrentDoctor" />
}
else if (isPatient)
{
    <PatientDoctorsSearchView Doctors="Doctors" SearchTerm="searchTerm" OnSearch="SearchDoctors" />
}

@code {
    private bool isLoading = true;
    private bool isAdmin;
    private bool isDoctor;
    private bool isPatient;

    private List<DoctorModel> Doctors = new();
    private DoctorModel CurrentDoctor = new();
    private string searchTerm = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.IsInRole("Admin")) isAdmin = true;
        else if (user.IsInRole("Doctor")) isDoctor = true;
        else if (user.IsInRole("Patient")) isPatient = true;

        if (isAdmin || isPatient)
            Doctors = await Http.GetFromJsonAsync<List<DoctorModel>>("api/doctors") ?? new();

        if (isDoctor)
            CurrentDoctor = await Http.GetFromJsonAsync<DoctorModel>("api/doctors/me") ?? new();

        isLoading = false;
    }

    private void AddDoctor()
    {
        NavManager.NavigateTo("/doctors/add");
    }

    private async Task DeleteDoctor(int id)
    {
        await Http.DeleteAsync($"api/doctors/{id}");
        Doctors = await Http.GetFromJsonAsync<List<DoctorModel>>("api/doctors") ?? new();
    }

    private async Task SearchDoctors()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
            Doctors = await Http.GetFromJsonAsync<List<DoctorModel>>("api/doctors") ?? new();
        else
            Doctors = await Http.GetFromJsonAsync<List<DoctorModel>>($"api/doctors/search?query={searchTerm}") ?? new();
    }
}
